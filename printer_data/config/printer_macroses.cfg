[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    Z_TILT_ADJUST
    G28
    G0 X125 Y125 Z30 F3600
    
   
[gcode_macro START_PRINT]
variable_retract: 1.2
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
    {% set bed_temp = params.BED_TEMP|default(70)|float %}
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    CLEAR_PAUSE
    M220 S100                                                                   # reset feedrate
    M221 S100                                                                   # reset flowrate
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}                  # set bed t℃
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp * 0.75}                # wait until bed is partially heated
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}               # set nozzle t℃
    G90                                                                         # absolute positioning
    M82                                                                         # absolute extrusion mode
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}                       # wait until
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}                    # wait until
    G28                                                                         # home
    BED_MESH_PROFILE LOAD=default
    G0 Z10 F1500                                                                # raise Z


    G1 X40 Y0 F6000
    M83 ; Relative extrusion mode
    G90
    G0 Z0.2
    G92 E0.0 ; reset extruder distance position
    G1 X60.0 F1000.0 ; intro line
    G1 X100.0 E10 F1000.0 ; intro line
    G92 E0                                                                      # reset extruder

[gcode_macro END_PRINT]
#   Use END_PRINT for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-1.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float * 2 %}
    TURN_OFF_HEATERS
    M107                                                                        # turn off fan
    G91
    G1 E-{E} F1500                                                              # retract
    G90
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    PARK                                                             # reset extruder

[gcode_macro PARK]
gcode:
    {% set x_park = params.X|default(0)|float %}
    {% set y_park = params.Y|default(220)|float %}
    {% set z_park = params.Z|default(50)|float + printer.toolhead.position.z|float %}
    {% set x_max = printer.toolhead.axis_maximum.x|float %}
    {% set y_max = printer.toolhead.axis_maximum.y|float %}
    {% set z_max = printer.toolhead.axis_maximum.z|float %}
    {% if x_park > x_max %}
        {% set x_park = x_max %}
    {% endif %}
    {% if y_park > y_max %}
        {% set y_park = y_max %}
    {% endif %}
    {% if z_park > z_max %}
        {% set z_park = z_max %}
    {% endif %}
    SAVE_GCODE_STATE NAME=PARK_STATE
    G90                                                                         # absolute positioning
    G1 Z{z_park} F1500
    G1 X{x_park} Y{y_park} F5000
    RESTORE_GCODE_STATE name=PARK_STATE


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    SAVE_GCODE_STATE NAME=PAUSE_STATE
    BASE_PAUSE
    G91
    G1 E-{E} F1500                                                              # retract
    G90
    PARK

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    G91
    G1 E{E} F1500                                                               # unretract
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_STATE MOVE=1
    BASE_RESUME


[gcode_macro M76]                                                               # Marlin Compatibility
gcode:
    PAUSE

#OK
[gcode_macro M601]                                                              # Prusa Compatibility
gcode:
    PAUSE

#OK
[gcode_macro G27]                                                               # Marlin Compatibility
gcode:
    PARK

#OK
[gcode_macro M125]                                                              # Marlin Compatibility
gcode:
    PARK

#OK
[gcode_macro M300]                                                              # Marlin Compatibility
gcode:
    # BEEP

#OK
[gcode_macro M600]                                                              # Marlin Compatibility
gcode:
    FILAMENT_CHANGE

#OK
[gcode_macro M701]                                                              # Marlin Compatibility
gcode:
    FILAMENT_LOAD

#OK
[gcode_macro M702]                                                              # Marlin Compatibility
gcode:
    FILAMENT_UNLOAD

#OK
[gcode_macro M92]
gcode:
    {% set extruder_steps = params.E|default(0.0025)|float %}
    SET_EXTRUDER_STEP_DISTANCE DISTANCE={extruder_steps}

#OK
[gcode_macro M500]
gcode:
    SAVE_CONFIG


[gcode_macro M204]
rename_existing: M204.1
gcode:
    {% set factor = params.F|default(0.5)|float %}
    {% if 'S' in params %}
        {% set ASSEL = params.S|default(0)|float %}
        SET_VELOCITY_LIMIT ACCEL={ASSEL} ACCEL_TO_DECEL={ ASSEL * factor }
    {% else %}
        {% if 'P' in params %}
            {% if 'T' in params %}
                {% if P|int < T|int %}
                    SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * factor }
                {% else %}
                    SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * factor }
                {% endif %}
            {% else %}
                SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * factor }
            {% endif %}
        {% elif 'T' in params %}
            SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * factor }
        {% endif %}
    {% endif %}



[gcode_macro M207]
gcode:
    {% if params.S is not defined %}
        {% set S = printer.configfile.settings.firmware_retraction.retract_length|float %}
    {% endif %}
    {% if params.F is not defined %}
        {% set F = printer.configfile.settings.firmware_retraction.retract_speed|float %}
    {% endif %}
    SET_RETRACTION RETRACT_LENGTH={S} RETRACT_SPEED={F}

[gcode_macro M208]
gcode:
    {% if params.S is not defined %}
        {% set S = printer.configfile.settings.firmware_retraction.unretract_extra_length|float %}
    {% endif %}
    {% if params.F is not defined %}
        {% set F = printer.configfile.settings.firmware_retraction.unretract_speed|float %}
    {% endif %}
    SET_RETRACTION UNRETRACT_EXTRA_LENGTH={S} UNRETRACT_SPEED={F}




[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

#OK
[gcode_macro M303]
gcode:
    {% if 'E' in params %}
        {% set heater = params.E|default(0)|int %}
        {% set temp = params.T|default(0)|float %}
        {% if heater == 0 %}                                                    # extruder
            {% if temp >= printer.configfile.settings.extruder.min_extrude_temp|float %}
                {% if temp <= printer.configfile.settings.extruder.max_temp|float %}
                    PID_CALIBRATE HEATER=extruder TARGET={T}
                {% endif %}
            {% endif %}
        {% elif heater == -1 %}                                                 # bed
            {% if temp <= printer.configfile.settings.heater_bed.max_temp|float %}
                PID_CALIBRATE HEATER=heater_bed TARGET={T}
            {% endif %}
        {% endif %}
    {% endif %}




[gcode_macro COUNTDOWN]
gcode:
    {% set timer = params.TIME|default(10)|int %}
    {% set message = params.MSG|default("Time: ") %}
    # countdown
    {% if timer > 60 %}
        {% for s in range(timer, 60, -10) %}
            M118 {message} {s}s
            G4 P10000                                                           # dwell 10 seconds
        {% endfor %}
        {% set timer = 60 %}
    {% endif %}
    {% if timer > 10 %}
        {% for s in range(timer, 10, -5) %}
            M118 {message} {s}s
            G4 P5000                                                           # dwell 5 seconds
        {% endfor %}
        {% set timer = 10 %}
    {% endif %}
    {% if timer > 0 %}
        {% for s in range(timer, 0, -1) %}
            M118 {message} {s}s
            G4 P1000                                                           # dwell 1 second
        {% endfor %}
    {% endif %}



[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    G28
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=G29
    SAVE_CONFIG
    BED_MESH_PROFILE LOAD=G29

#OK
# [gcode_macro SCREWS_ADJUST]
# gcode:
    # BED_SCREWS_ADJUST

#OK
# [gcode_macro PID_Ex]
# gcode:
	# PID_CALIBRATE HEATER=extruder TARGET=250
    # SAVE_CONFIG
#m303 e0 s210 c8

#OK
# [gcode_macro PID_Bed]
# gcode:
	# PID_CALIBRATE HEATER=heater_bed TARGET=70
    # SAVE_CONFIG

